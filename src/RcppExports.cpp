// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// rcpp_bSpline_fit
Rcpp::List rcpp_bSpline_fit(const arma::vec& x, const arma::vec& y, const unsigned int df, const unsigned int degree, const arma::vec& boundary_knots);
RcppExport SEXP _example_pkg_Rcpp_splines2_rcpp_bSpline_fit(SEXP xSEXP, SEXP ySEXP, SEXP dfSEXP, SEXP degreeSEXP, SEXP boundary_knotsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type df(dfSEXP);
    Rcpp::traits::input_parameter< const unsigned int >::type degree(degreeSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type boundary_knots(boundary_knotsSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bSpline_fit(x, y, df, degree, boundary_knots));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_example_pkg_Rcpp_splines2_rcpp_bSpline_fit", (DL_FUNC) &_example_pkg_Rcpp_splines2_rcpp_bSpline_fit, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_example_pkg_Rcpp_splines2(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
